<UserControl x:Class="WpfControlLibrary.View.AddTaskControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignWidth="429" d:DesignHeight="262">

    <UserControl.Resources>
        <ResourceDictionary>

            <DataTemplate x:Key="TaskItem">
                <TextBlock Margin="0" FontFamily="Arial" VerticalAlignment="Center" Text="{Binding TaskName}"/>
            </DataTemplate>

            <Style x:Key="TaskListItemContainer" TargetType="{x:Type ListViewItem}">
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{Binding TaskColor}"/>
                <!--
                <Setter Property="Background" Value="#00000000"/>
                -->
            </Style>

            <DataTemplate x:Key="TaskListItem">
                <Grid x:Name="TaskGrid" Tag="{Binding TaskNum}" 
                      Cursor="Hand" MouseDown="Task_MouseDown" MouseUp="Task_MouseUp">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="395"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="16"/>
                    </Grid.RowDefinitions>

                    <!--
                    <Border Grid.Row="0" Grid.Column="0"
                            Margin="5,0,5,0"
                            Background="{Binding TaskColor}"
                            BorderThickness="0,0,0,0" BorderBrush="LightSteelBlue"/>
                    -->
                    <TextBlock Grid.Row="0" Grid.Column="0" Name="tblTaskName"
                               Margin="5,0,5,0" VerticalAlignment="Center" 
                               FontSize="12" Foreground="Black"
                               Text="{Binding TaskName}" />
                    <CheckBox Grid.Row="0" Grid.Column="1" Name="chkTaskReflect"
                              Margin="5,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center"
                              Background="White"
                              Click="chkTaskReflect_Click" Tag="{Binding TaskNum}" 
                              IsChecked="{Binding TaskReflect}"/>
                </Grid>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding TaskSelected, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter TargetName="TaskGrid" Property="Background" Value="#FF337AB7"/>
                        <Setter TargetName="tblTaskName" Property="Foreground" Value="#FFFFFFFF"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TaskSelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter TargetName="chkTaskReflect" Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TaskEmpty, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter TargetName="chkTaskReflect" Property="Visibility" Value="Hidden"/>
                    </DataTrigger>
                </DataTemplate.Triggers>

            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>
        
        <ListView Name="TaskListView" Grid.Row="0" Grid.Column="0" 
                  Padding="0" HorizontalContentAlignment="Stretch" 
                  Cursor="Hand"
                  Background="AliceBlue" 
                  ItemsSource="{Binding TaskList}"
                  ItemContainerStyle="{StaticResource TaskListItemContainer}" 
                  ItemTemplate="{StaticResource TaskListItem}">

            <!--
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock x:Name="ItemText" 
                               Margin="0" FontFamily="Arial" FontSize="12" 
                               VerticalAlignment="Center" 
                               Tag="{Binding TaskNum}"
                               MouseDown="OnMouseDown"
                               MouseUp="OnMouseUp"
                               Text="{Binding TaskName}"/>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding TaskSelected, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter TargetName="ItemText" Property="Background" Value="#FFB3D1EA"/>
                            <Setter TargetName="ItemText" Property="Foreground" Value="#FFFFFFFF"/>
                        </DataTrigger>
-->
                        <!--
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TaskSelected, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Foreground" TargetName="ItemText" Value="#FF900000"/>
                                <Setter Property="Background" TargetName="ItemText" Value="{Binding TaskHiColor}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        -->

                        <!--
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="ItemText" Value="#FF900000"/>
                            <Setter Property="Background" TargetName="ItemText" Value="{Binding TaskHiColor}"/>
                        </Trigger>
                        -->
<!--            
                    </DataTemplate.Triggers>

                </DataTemplate>
            </ListView.ItemTemplate>
            
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Style.Setters>
                        <Setter Property="Background" Value="{Binding TaskColor}"/>
                        <Setter Property="Focusable" Value="false"/>
                    </Style.Setters>
                </Style>
            </ListView.Resources>
-->                
            
        </ListView> 

    </Grid>
    
</UserControl>
